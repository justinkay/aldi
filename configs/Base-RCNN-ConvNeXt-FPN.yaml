_BASE_: "detectron2/Base-RCNN-FPN.yaml"
MODEL:
  WEIGHTS: "models/convnext_large_1k_384_backbone.pkl"
  MASK_ON: False
  BACKBONE:
    NAME: "build_convnext_fpn_backbone"
  CONVNEXT:
    # convnext-T:
    # DEPTHS: [3, 3, 9, 3]
    # DIMS: [96, 192, 384, 768]
    # convnext-L:
    DEPTHS: [3, 3, 27, 3]
    DIMS: [192, 384, 768, 1536]
    DROP_PATH_RATE: 0.2
    LAYER_SCALE_INIT_VALUE: 1e-6
    OUT_FEATURES: [0, 1, 2, 3]
  FPN:
    IN_FEATURES: [0, 1, 2, 3]
  ANCHOR_GENERATOR:
    SIZES: [[64], [128], [256], [512], [1024]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 1000
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
INPUT:
  FORMAT: "RGB"
  MIN_SIZE_TRAIN: (800, 832, 864, 896, 928, 960, 992, 1024)
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TRAIN: 2048
  MAX_SIZE_TEST: 2048
SOLVER:
  BASE_LR: 0.06
  # BASE_LR: 0.0001
  STEPS: (1600,)
  MAX_ITER: 2000
  IMS_PER_BATCH: 48
  IMS_PER_GPU: 4
  BACKWARD_AT_END: False
  AMP:
    ENABLED: True
  WARMUP_ITERS: 100
  WARMUP_FACTOR: 0.01
  CHECKPOINT_PERIOD: 500
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_RATE: 0.95
  OPTIMIZER: "ADAMW"
VIS_PERIOD: 100
TEST:
  EVAL_PERIOD: 100
EMA:
  START_ITER: 250 # to speed up training ; assuming 2 GPUS ~= 10 epochs